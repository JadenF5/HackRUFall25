<section>
  <h2>{{cls.code}} — {{cls.title}}</h2>
  <div class="muted">{{cls.department}}{{#if cls.campus}} • {{cls.campus}}{{/if}}</div>

  {{#if cls.description}}
    <p style="margin-top:10px">{{cls.description}}</p>
  {{/if}}

  <div class="class-meta" style="margin-top:12px">
    <div><strong>Prereqs:</strong>
      {{#if cls.prereqs.length}}
        {{#each cls.prereqs}}{{this}}{{#unless @last}}, {{/unless}}{{/each}}
      {{else}}
        None
      {{/if}}
    </div>
    <div><strong>Code:</strong> {{cls.code}}</div>
  </div>

  <h3 style="margin-top:18px">Professors & Ratings</h3>
  <div id="professor-list">
    <p>Loading professor ratings...</p>
  </div>
</section>

<script>
  (async () => {
    try {
      const res = await fetch(`/api/class/{{cls._id}}/professors`);
      const data = await res.json();
      const el = document.getElementById("professor-list");

      if (!data.professors || !data.professors.length) {
        el.innerHTML = "<p>No professor data found.</p>";
        return;
      }

      el.innerHTML = `
        <ul>
          ${data.professors.map(p => {
            const name = [p.firstName, p.lastName].filter(Boolean).join(' ') || 'Professor';
            const dept = p.department || '—';
            const rating = (p.rating ?? 'N/A');
            const diff = (p.difficulty ?? 'N/A');
            const wta = (p.wouldTakeAgain != null ? p.wouldTakeAgain + '%' : 'N/A');
            const link = p.rmpLink ? `<br><a href="${p.rmpLink}" target="_blank" rel="noopener">View on RateMyProfessors</a>` : '';
            return `
              <li>
                <strong>${name}</strong> — ${dept}<br>
                Rating: ${rating} | Difficulty: ${diff} | Would take again: ${wta}
                ${link}
              </li>
            `;
          }).join('')}
        </ul>
      `;
    } catch (e) {
      document.getElementById("professor-list").innerHTML = "<p>Failed to load professor data.</p>";
      console.error(e);
    }
  })();
</script>
