<section>
  <h2>AI Helpers</h2>

  <!-- Classes recommender (already wired to /api/search) -->
  <div id="ai-classes">
    <h3>Find Classes</h3>
    <input id="ai-class-input" placeholder="e.g., robotics, python, AI" />
    <button id="ai-class-btn">Search</button>
    <ul id="ai-class-results"></ul>
  </div>

  <!-- Majors recommender (new: /api/ai/majors) -->
  <div id="ai-majors" style="margin-top:1.5rem">
    <h3>Find Majors (Undecided)</h3>
    <input id="ai-major-input" placeholder="e.g., designing products, psychology + data" />
    <button id="ai-major-btn">Search</button>
    <ul id="ai-major-results"></ul>
  </div>
</section>

<script>
(function(){
  // --- classes ---
  const cIn = document.getElementById('ai-class-input');
  const cBtn = document.getElementById('ai-class-btn');
  const cOut = document.getElementById('ai-class-results');

  function renderClassAI(items){
    cOut.innerHTML = '';
    if (!Array.isArray(items) || !items.length) {
      cOut.innerHTML = '<li>No AI class recommendations.</li>';
      return;
    }
    for (const it of items) {
      const li = document.createElement('li');
      const a = document.createElement('a');
      a.href = it.linkPath || ('/class/' + encodeURIComponent(it.code || 'unknown'));
      a.textContent = it.code || it.title || 'Class';
      const titleText = document.createTextNode(' — ' + (it.title || ''));
      const reason = document.createElement('div');
      reason.style.fontSize = '.9em';
      reason.style.color = '#888';
      reason.textContent = it.reason || '';
      li.appendChild(a);
      li.appendChild(titleText);
      li.appendChild(reason);
      cOut.appendChild(li);
    }
  }

  async function fetchClassAI() {
    const query = cIn.value.trim();
    if (!query) return;
    try {
      const res = await fetch('/api/search', { // your existing combined endpoint
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ query })
      });
      const data = await res.json();
      renderClassAI(data?.ai || []);
    } catch (e) {
      cOut.innerHTML = '<li>AI class search failed.</li>';
    }
  }

  cBtn.addEventListener('click', fetchClassAI);
  cIn.addEventListener('keydown', e => { if (e.key === 'Enter') fetchClassAI(); });

  // --- majors ---
  const mIn = document.getElementById('ai-major-input');
  const mBtn = document.getElementById('ai-major-btn');
  const mOut = document.getElementById('ai-major-results');

  function renderMajorAI(items){
    mOut.innerHTML = '';
    if (!Array.isArray(items) || !items.length) {
      mOut.innerHTML = '<li>No AI major suggestions.</li>';
      return;
    }
    for (const it of items) {
      const li = document.createElement('li');
      const a = document.createElement('a');
      a.href = it.linkPath || ('/majors/' + encodeURIComponent(it.code || 'unknown'));
      a.textContent = it.code || it.name || 'Major';
      const nameText = document.createTextNode(' — ' + (it.name || ''));
      const reason = document.createElement('div');
      reason.style.fontSize = '.9em';
      reason.style.color = '#888';
      reason.textContent = it.reason || '';
      const prereqs = document.createElement('div');
      prereqs.style.fontSize = '.85em';
      prereqs.style.color = '#666';
      prereqs.textContent = it.prereqs ? `Prereqs: ${it.prereqs}` : '';
      li.appendChild(a);
      li.appendChild(nameText);
      li.appendChild(reason);
      li.appendChild(prereqs);
      mOut.appendChild(li);
    }
  }

  async function fetchMajorAI() {
    const interests = mIn.value.trim();
    if (!interests) return;
    try {
      const res = await fetch('/api/ai/majors', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ interests })
      });
      const data = await res.json();
      renderMajorAI(Array.isArray(data) ? data : []);
    } catch (e) {
      mOut.innerHTML = '<li>AI major search failed.</li>';
    }
  }

  mBtn.addEventListener('click', fetchMajorAI);
  mIn.addEventListener('keydown', e => { if (e.key === 'Enter') fetchMajorAI(); });
})();
</script>

<section>
  <h2>AI Helpers</h2>

  <div id="ai-classes" class="card">
    <h3>Find Classes</h3>
    <div class="row">
      <input id="ai-class-input" placeholder="e.g., robotics, python, AI" />
      <button id="ai-class-btn">Search</button>
    </div>
    <ul id="ai-class-results" class="list"></ul>
  </div>

  <div id="ai-majors" class="card" style="margin-top:1.5rem">
    <h3>Find Majors (Undecided)</h3>
    <div class="row">
      <input id="ai-major-input" placeholder="e.g., designing products, psychology + data" />
      <button id="ai-major-btn">Search</button>
    </div>
    <ul id="ai-major-results" class="list"></ul>
  </div>
</section>

<script src="/js/ai.js"></script>
